# Generated by Django 3.2.14 on 2022-07-24 02:16

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import propiedades.models
import versatileimagefield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('agentes', '0004_alter_agente_redes_sociales'),
        ('zonas', '0003_alter_zona_tipo_zona'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('clientes', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Caracteristica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(db_index=True, max_length=80, unique=True)),
                ('aplica_apartamento', models.BooleanField(default=False)),
                ('aplica_casa', models.BooleanField(default=False)),
                ('aplica_oficina', models.BooleanField(default=False)),
                ('aplica_bodega', models.BooleanField(default=False)),
                ('aplica_local', models.BooleanField(default=False)),
                ('aplica_lote', models.BooleanField(default=False)),
                ('tipo_caracteristica', models.IntegerField(choices=[(1, 'Interior'), (2, 'Exterior'), (3, 'De la zona')], default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Propiedad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matricula_inmobiliaria', models.CharField(blank=True, max_length=100, null=True)),
                ('direccion', django.contrib.postgres.fields.jsonb.JSONField(default={'estado': 'null'})),
                ('caracteristicas', django.contrib.postgres.fields.jsonb.JSONField(default={})),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, null=True)),
                ('fecha_modificacion', models.DateTimeField(auto_now=True, null=True)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('linkvirtual360', models.CharField(blank=True, max_length=100, null=True, verbose_name='Link virtual 360')),
                ('avaluo', django.contrib.postgres.fields.jsonb.JSONField(default={'estado': 'null'})),
                ('coordenadas', models.CharField(blank=True, default='0 0', max_length=100, null=True, verbose_name='coordenadas long lat')),
                ('agente', models.ForeignKey(limit_choices_to={'activo': True}, on_delete=django.db.models.deletion.CASCADE, related_name='propiedades', to='agentes.agente')),
                ('municipio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='zonas.municipio', verbose_name='Ciudad')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_propiedades.propiedad_set+', to='contenttypes.contenttype')),
                ('propietario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='propiedades', to='clientes.cliente')),
            ],
            options={
                'verbose_name': 'Propiedad',
                'verbose_name_plural': 'Propiedades',
                'ordering': ('-id', 'polymorphic_ctype_id'),
            },
        ),
        migrations.CreateModel(
            name='TipoDocumentoPropiedad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_documento', models.CharField(max_length=120, verbose_name='Nombre del Documento')),
                ('requisito_publicacion', models.BooleanField(default=False, verbose_name='Requisito para publicación')),
                ('descripcion', models.TextField(blank=True, verbose_name='Descripcion')),
            ],
            options={
                'verbose_name': 'Tipo de Documento de la  Propiedad',
                'verbose_name_plural': 'Tipos de Documento de la Propiedad',
            },
        ),
        migrations.CreateModel(
            name='Comercial',
            fields=[
                ('propiedad_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='propiedades.propiedad')),
                ('tipo', models.IntegerField(choices=[(1, 'Local'), (2, 'Oficinas')], default=1)),
                ('espacios', models.IntegerField(blank=True, default=0, null=True, verbose_name='Número de espacios')),
                ('cocineta', models.BooleanField(default=False)),
                ('banos', models.IntegerField(blank=True, default=0, null=True, verbose_name='Número de baños')),
                ('anio_construccion', models.IntegerField(blank=True, default=0, null=True, verbose_name='Año de construcción')),
                ('balcones', models.IntegerField(blank=True, default=0, null=True, verbose_name='Número de balcones')),
                ('terrazas', models.IntegerField(blank=True, default=0, null=True, verbose_name='Número de terrazas')),
                ('area_privada', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Área privada')),
                ('area_construida', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Área construida')),
                ('area_terraza', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Área terraza')),
                ('tipo_estacionamientos', models.IntegerField(choices=[(0, 'N/A'), (1, 'En fila'), (2, 'Independientes')], default=1)),
                ('estacionamientos_cubiertos', models.IntegerField(blank=True, default=0, null=True, verbose_name='Número de garajes cubiertos')),
                ('estacionamientos_descubiertos', models.IntegerField(blank=True, default=0, null=True, verbose_name='Número de garajes descubiertos')),
                ('estacionamientos_totales', models.IntegerField(blank=True, default=0, help_text='Cubiertos y descubiertos', null=True, verbose_name='Número total de garajes')),
                ('amoblado', models.BooleanField(default=False)),
                ('estrato', models.IntegerField(blank=True, null=True)),
                ('deposito', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Comercial',
                'verbose_name_plural': 'Comerciales',
            },
            bases=('propiedades.propiedad',),
        ),
        migrations.CreateModel(
            name='Industrial',
            fields=[
                ('propiedad_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='propiedades.propiedad')),
                ('tipo', models.IntegerField(choices=[(1, 'Bodega')], default=1)),
                ('espacios', models.IntegerField(blank=True, default=0, null=True, verbose_name='Número de espacios')),
                ('banos', models.IntegerField(blank=True, default=0, null=True, verbose_name='Número de baños')),
                ('anio_construccion', models.IntegerField(blank=True, default=0, null=True, verbose_name='Año de construcción')),
                ('area_privada', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Área privada')),
                ('area_construida', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Área construida')),
                ('area_lote', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Área lote')),
            ],
            options={
                'verbose_name': 'Industrial',
                'verbose_name_plural': 'Industriales',
            },
            bases=('propiedades.propiedad',),
        ),
        migrations.CreateModel(
            name='Lotes',
            fields=[
                ('propiedad_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='propiedades.propiedad')),
                ('tipo', models.IntegerField(choices=[(1, 'Lote Industrial'), (2, 'Lote Vivienda')], default=1)),
                ('area_lote', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Área lote')),
            ],
            options={
                'verbose_name': 'Lote',
                'verbose_name_plural': 'Lotes',
            },
            bases=('propiedades.propiedad',),
        ),
        migrations.CreateModel(
            name='Vivienda',
            fields=[
                ('propiedad_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='propiedades.propiedad')),
                ('tipo_vivienda', models.IntegerField(choices=[(1, 'Apartamento'), (2, 'Casa')], default=1)),
                ('habitaciones', models.IntegerField(blank=True, default=0, help_text='No Incluyen cuartos de servicio', null=True, verbose_name='Número de habitaciones')),
                ('estudios', models.IntegerField(blank=True, default=0, null=True, verbose_name='Número de estudios')),
                ('habitaciones_auxiliares', models.IntegerField(blank=True, default=0, null=True, verbose_name='Número de cuartos de servicio')),
                ('banos', models.IntegerField(blank=True, default=0, null=True, verbose_name='Número de baños')),
                ('banos_sociales', models.IntegerField(blank=True, default=0, null=True, verbose_name='Número de baños sociales')),
                ('banos_servicio', models.IntegerField(blank=True, default=0, null=True, verbose_name='Número de baños de servicio')),
                ('anio_construccion', models.IntegerField(blank=True, default=0, null=True, verbose_name='Año de construcción')),
                ('balcones', models.IntegerField(blank=True, default=0, null=True, verbose_name='Número de balcones')),
                ('terrazas', models.IntegerField(blank=True, default=0, null=True, verbose_name='Número de terrazas')),
                ('area_privada', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Área privada')),
                ('area_construida', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Área construida')),
                ('area_terraza', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Área terraza')),
                ('area_lote', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Área lote')),
                ('tipo_estacionamientos', models.IntegerField(choices=[(0, 'N/A'), (1, 'En fila'), (2, 'Independientes')], default=1)),
                ('estacionamientos_cubiertos', models.IntegerField(blank=True, default=0, null=True, verbose_name='Número de garajes cubiertos')),
                ('estacionamientos_descubiertos', models.IntegerField(blank=True, default=0, null=True, verbose_name='Número de garajes descubiertos')),
                ('estacionamientos_totales', models.IntegerField(blank=True, default=0, help_text='Cubiertos y descubiertos', null=True, verbose_name='Número total de garajes')),
                ('amoblado', models.BooleanField(default=False)),
                ('estrato', models.IntegerField(blank=True, null=True)),
                ('deposito', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('propiedades.propiedad',),
        ),
        migrations.CreateModel(
            name='Fotografia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', versatileimagefield.fields.VersatileImageField(upload_to=propiedades.models.upload_foto_propiedad, verbose_name='Image')),
                ('valida', models.BooleanField(default=False)),
                ('es_fotografia_principal', models.BooleanField(default=False)),
                ('orden', models.IntegerField(default=0)),
                ('propiedad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fotografias', to='propiedades.propiedad')),
            ],
            options={
                'verbose_name': 'Fotografía',
                'verbose_name_plural': 'Fotografías',
                'ordering': ['orden'],
            },
        ),
        migrations.CreateModel(
            name='DocumentoPropiedad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archivo', models.FileField(upload_to=propiedades.models.upload_documentos_personas)),
                ('propiedad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='archivos', to='propiedades.propiedad')),
                ('tipo_documento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='propiedades.tipodocumentopropiedad')),
            ],
            options={
                'verbose_name': 'Documento de la Propiedad',
                'verbose_name_plural': 'Documentos de las Propiedades',
            },
        ),
    ]
